---

- name: Ensure hostname is resolvable
  become: yes
  lineinfile:
    dest: /etc/hosts
    line: "127.0.0.1 localhost {{ ansible_hostname }}"
    regexp: ^127\.0\.0\.1
  when: ansible_virtualization_type != 'docker'

- name: Install some dependencies
  become: yes
  apt:
    name: "{{ item }}"
    update_cache: yes
  with_items: "{{ sansible_gocd_server_packages }}"

- name: Install AWS CLI
  become: yes
  pip:
    name: "{{ item }}"
  when: sansible_gocd_server_aws_install_cli
  with_items:
    - awscli
    - boto

- name: Add GoCD Apt key
  become: yes
  apt_key:
    keyserver: hkp://keyserver.ubuntu.com:80
    id: "{{ sansible_gocd_server_repo_key_id }}"
    state: present

- name: Install GoCD repo
  become: yes
  apt_repository:
    repo: "{{ sansible_gocd_server_repo_source }}"
    state: present
    update_cache: yes

- name: Install go-server
  become: yes
  apt:
    name: "go-server={{ sansible_gocd_server_version | regex_replace('^(.*?)\\*?$', '\\1*') }}"
    state: present
    force: yes

- name: Create various directories
  become: yes
  file:
    group: "{{ sansible_gocd_server_group }}"
    owner: "{{ sansible_gocd_server_user }}"
    path: "/home/{{ sansible_gocd_server_user }}/{{ item }}"
    state: directory
  with_items:
    - .aws
    - bin
    - work/go-server
    - work/go-server/plugins/external
    - work/go-server/artifacts/pipelines

- name: Add go-server to autostart
  become: yes
  service:
    name: go-server
    enabled: yes

- name: Install go-server plugins
  become: yes
  become_user: "{{ sansible_gocd_server_user }}"
  get_url:
    dest: "/home/{{ sansible_gocd_server_user }}/work/go-server/plugins/external"
    url: "{{ item }}"
  with_items: "{{ sansible_gocd_server_plugins }}"
  notify:
    - restart go-server
